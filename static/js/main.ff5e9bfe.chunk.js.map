{"version":3,"sources":["logo.svg","components/Input/Input.jsx","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","htmlFor","id","title","type","value","onChange","error","class","Button","onClick","name","App","useState","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","console","log","onSubmit","e","preventDefault","alert","newEmail","target","length","test","newPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,I,YCwBAA,EApBD,SAACC,GAEf,OAEA,sBAAKC,UAAU,cAAf,UAEA,uBAAOC,QAASF,EAAMG,GAAtB,SAA2BH,EAAMI,QAEjC,uBAAOC,KAAML,EAAMK,KAAMF,GAAIH,EAAMG,GAAIG,MAAON,EAAMM,MAAOC,SAAUP,EAAMO,WAE1EP,EAAMQ,OAAS,mBAAGC,MAAM,cAAT,SAAwBT,EAAMQ,YCQ/BE,G,MAdA,SAACV,GAEhB,OAEA,wBAAQK,KAAML,EAAMK,MAAQ,SAAUJ,UAAU,SAASU,QAASX,EAAMW,QAAxE,SAECX,EAAMY,SCyHUC,MAvHjB,WAEA,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAoCJ,mBAAS,2BAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAA0CN,mBAAS,6BAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAqFE,OAJAC,QAAQC,IAAIT,EAAOE,GAMnB,sBAAKhB,UAAU,MAAf,UAEA,4CAIA,uBAAMwB,SAzFkB,SAACC,GAE3BA,EAAEC,iBAEFJ,QAAQC,IAAI,kBAIRL,GAAcE,EAElBO,MAAM,gCAINA,MAAM,6BAAD,OAA8Bb,EAA9B,iBAA4CE,KA2E/C,UAEA,cAAC,EAAD,CAAOZ,KAAK,QAAQD,MAAM,UAAUD,GAAG,QAAQG,MAAOS,EAAOR,SArErC,SAACmB,GAE3B,IAAMG,EAAWH,EAAEI,OAAOxB,MAE1BU,EAASa,GAIe,IAApBA,EAASE,OAEbX,EAAc,2BAEF,0JAA0JY,KAAKH,GAM3KT,EAAc,IAJdA,EAAc,iCAuD8EZ,MAAOW,IAEjG,cAAC,EAAD,CAAOd,KAAK,WAAWD,MAAM,aAAaD,GAAG,WAAWG,MAAOW,EAAUV,SAhD9C,SAACmB,GAE5B,IAAMO,EAAcP,EAAEI,OAAOxB,MAE7BY,EAAYe,GAEZV,QAAQC,IAAI,sCAAuCS,GAIxB,IAAvBA,EAAYF,OAEhBT,EAAiB,6BAENW,EAAYF,OAAS,EAEhCT,EAAiB,0DAEL,KAAKU,KAAKC,GAMtBX,EAAiB,IAJjBA,EAAiB,4CA4BwFd,MAAOa,IAEhH,cAAC,EAAD,CAAQhB,KAAK,SAASO,KAAK,iBC/GdsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff5e9bfe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\n\r\n\r\nconst Input = (props) => {\r\n\r\nreturn (\r\n\r\n<div className=\"input-field\">\r\n\r\n<label htmlFor={props.id}>{props.title}</label>\r\n\r\n<input type={props.type} id={props.id} value={props.value} onChange={props.onChange} />\r\n\r\n{props.error && <p class=\"input-error\">{props.error}</p>}\r\n\r\n</div>\r\n\r\n);\r\n\r\n};\r\n\r\n\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\n\r\n\r\nimport './Button.css'\r\n\r\n\r\n\r\nconst Button = (props) => {\r\n\r\nreturn (\r\n\r\n<button type={props.type || \"button\"} className=\"button\" onClick={props.onClick}>\r\n\r\n{props.name}\r\n\r\n</button>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Button;","import React, { useState } from \"react\";\n\n\n\nimport logo from \"./logo.svg\";\n\nimport \"./App.css\";\n\n\n\nimport Input from \"./components/Input/Input\";\n\nimport Button from \"./components/Button/Button\";\n\n\n\nfunction App() {\n\nconst [email, setEmail] = useState(\"\");\n\nconst [password, setPassword] = useState(\"\");\n\nconst [emailError, setEmailError] = useState(\"Please provide an email\");\n\nconst [passwordError, setPasswordError] = useState(\"Please provide a password\");\n\n\n\nconst handleLoginSubmit = (e) => {\n\ne.preventDefault()\n\nconsole.log(\"FORM SUBMITTED\")\n\n\n\nif (emailError || passwordError) {\n\nalert(\"Please fix login form errors\")\n\n} else {\n\nalert(`Logged in successfully as ${email} with ${password}`)\n\n}\n\n}\n\n\n\nconst handleEmailChange = (e) => {\n\nconst newEmail = e.target.value;\n\nsetEmail(newEmail)\n\n\n\nif (newEmail.length === 0) {\n\nsetEmailError(\"Please provide an email\")\n\n} else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(newEmail)) {\n\nsetEmailError(\"Please provide a valid email\")\n\n} else {\n\nsetEmailError(\"\")\n\n}\n\n}\nconst handlePasswordChange = (e) => {\n\n  const newPassword = e.target.value;\n  \n  setPassword(newPassword)\n  \n  console.log(\"handlePasswordChange -> newPassword\", newPassword)\n  \n  \n  \n  if (newPassword.length === 0) {\n  \n  setPasswordError(\"Please provide a password\")\n  \n  } else if (newPassword.length < 8) {\n  \n  setPasswordError(\"Please provide a password of a minimum of 8 characters\")\n  \n  } else if (!/\\d/.test(newPassword)) {\n  \n  setPasswordError(\"Please provide a password with a number\")\n  \n  } else {\n  \n  setPasswordError(\"\")\n  \n  }\n  \n  }\n  \n  \n  \n  console.log(email, password);\n  \n  \n  \n  return (\n  \n  <div className=\"App\">\n  \n  <h1>Login Form</h1>\n  \n  \n  \n  <form onSubmit={handleLoginSubmit}>\n  \n  <Input type=\"email\" title=\"Email: \" id=\"email\" value={email} onChange={handleEmailChange} error={emailError} />\n  \n  <Input type=\"password\" title=\"Password: \" id=\"password\" value={password} onChange={handlePasswordChange} error={passwordError} />\n  \n  <Button type=\"submit\" name=\"Login\" />\n  \n  </form>\n  \n  </div>\n  \n  );\n  \n  }\n  \n  \n  \n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}